<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAHgAAAB4CAYAAAA5ZDbSAAAABGdBTUEAALGPC/xhBQAAA9RJREFUeF7t
        nbFqk2EYhSNKHb0B76DgItIoKXRwkbRNK0Q3L0QXQYc6VKtX4KJDhzYiuDq4OYpiEdRRZxUchNbvl9Oa
        xtM2aU4Gk+eBB0qbfMl5T/uSofx/DQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKB/rry4cnq+07q+
        sLn0uPhmfnPpa3FnjP1a5azyVrnb6+0pjWL8aG4sXy2BP/UMYNL8WIpe1kjGhJ3aiWanddeEnVS3i3eq
        uWhCI+fS2qUL+jJPCXOvKxzKhY3lFY1oZMw8mjtbv994XtzRt7I0ny0uljDVb6wNOeFul5LnNaoo07en
        p+qrjdul2B9VuSMpuPpA1dxc+myC4V8/VXPSyCLUHzQul0Lf7xY7soLLJ8drJhD2WD58tjWyoehex049
        LEf5633qAuE/PtHIjoVbx049PEd54x96gqB3SyMbmIPWsVNPyVHe+PeeIOj9ppH1zVHr2Kmn5jBB8AA1
        siPpdx07dUQOFwS9GtmhDLKOnTomhwuCXo3Mcpx17NRxOVwQ9Gpk+xhmHTt1bA4XBL0a2R7DrmOnjs7h
        gqBXI4utY6deIocLgt70OnaqlhwuCHrrq7OvXSlJVUsOFwS9rpC0qiWHC4JeV0ha1ZLDBUGvKyStasnh
        gqDXFZJWteRwQdDrCkmrWnK4IOh1haRVLTlcEPS6QtKqlhwuCHpdIWlVSw4XBL2ukLSqJYcLgl5XSFrV
        ksMFQa8rJK1qyeGCoNcVkla15HBB0OsKSatacrgg6HWFpFUtOVwQ9LpC0qqWHC4Iel0haVVLDhcEva6Q
        tKolhwuCXldIWtWSwwVBryskrWrJ4YKg1xWSVrXkcEHQ6wpJq1pyuCDodYWkVS05XBD0ukLSqpYcLgh6
        XSFpVUsOFwS9/OP7mFtdFO3iauNGKeJLbzEpVUsOFwS9Glnt/MrlM6WMh8Vf3eUk1EvkcEHQq5HtMbM2
        e67+oPHKFXVcdXQOFwS9Gtl+wmtbp+ZwQdCrkVlSa1vH5XBB0KuRHcqwa1vH5HBB0KuRHc0Qa1sn5Chv
        nAuh9efAF0I7ztrWU3OUN77VEwSdndZ7jWxgBlnbekoOLkbat0NdjLTfta1H5+Bywv2ZupzwUWtbD8sx
        93LuVPkrfudCodxYftteb5/UyCIctLb14yxc0v9QR3ZJf7e29ZM8JcQtE27ibXZaNzWikdG9tvWtEVB+
        m7itzj7H67Y6u3BjrD+O4Y2xuui+td2fD2Cd1k8zhPGx5KtyTsSt7QAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAOC/pFb7DSOJmpfiitzGAAAAAElFTkSuQmCC
</value>
  </data>
</root>